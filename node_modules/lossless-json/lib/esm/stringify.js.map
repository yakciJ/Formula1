{"version":3,"file":"stringify.js","names":["isNumber","stringify","value","replacer","space","numberStringifiers","resolvedSpace","resolveSpace","replacedValue","call","stringifyValue","indent","Array","isArray","stringifier","find","item","test","str","Error","Date","Boolean","Number","String","JSON","isLosslessNumber","toString","stringifyArray","stringifyObject","undefined","array","childIndent","i","length","object","toJSON","keys","map","Object","first","forEach","key","includeProperty","keyStr","repeat"],"sources":["../../src/stringify.ts"],"sourcesContent":["import type { GenericObject, Replacer, NumberStringifier, JavaScriptValue } from './types'\nimport { isNumber } from './utils.js'\n\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */\nexport function stringify(\n  value: JavaScriptValue,\n  replacer?: Replacer,\n  space?: number | string,\n  numberStringifiers?: NumberStringifier[]\n): string | undefined {\n  const resolvedSpace = resolveSpace(space)\n\n  const replacedValue =\n    typeof replacer === 'function' ? replacer.call({ '': value }, '', value) : value\n\n  return stringifyValue(replacedValue, '')\n\n  /**\n   * Stringify a value\n   */\n  function stringifyValue(value: unknown, indent: string): string | undefined {\n    if (Array.isArray(numberStringifiers)) {\n      const stringifier = numberStringifiers.find((item) => item.test(value))\n      if (stringifier) {\n        const str = stringifier.stringify(value)\n        if (typeof str !== 'string' || !isNumber(str)) {\n          throw new Error(\n            'Invalid JSON number: ' +\n              'output of a number stringifier must be a string containing a JSON number ' +\n              `(output: ${str})`\n          )\n        }\n        return str\n      }\n    }\n\n    // boolean, null, number, string, or date\n    if (\n      typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string' ||\n      value === null ||\n      value instanceof Date ||\n      value instanceof Boolean ||\n      value instanceof Number ||\n      value instanceof String\n    ) {\n      return JSON.stringify(value)\n    }\n\n    // lossless number, the secret ingredient :)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (value && value.isLosslessNumber) {\n      return value.toString()\n    }\n\n    // BigInt\n    if (typeof value === 'bigint') {\n      return value.toString()\n    }\n\n    // Array\n    if (Array.isArray(value)) {\n      return stringifyArray(value, indent)\n    }\n\n    // Object (test lastly!)\n    if (value && typeof value === 'object') {\n      return stringifyObject(value as GenericObject<unknown>, indent)\n    }\n\n    return undefined\n  }\n\n  /**\n   * Stringify an array\n   */\n  function stringifyArray(array: Array<unknown>, indent: string): string {\n    const childIndent = resolvedSpace ? indent + resolvedSpace : undefined\n    let str = resolvedSpace ? '[\\n' : '['\n\n    for (let i = 0; i < array.length; i++) {\n      const item =\n        typeof replacer === 'function' ? replacer.call(array, String(i), array[i]) : array[i]\n\n      if (resolvedSpace) {\n        str += childIndent\n      }\n\n      if (typeof item !== 'undefined' && typeof item !== 'function') {\n        str += stringifyValue(item, childIndent)\n      } else {\n        str += 'null'\n      }\n\n      if (i < array.length - 1) {\n        str += resolvedSpace ? ',\\n' : ','\n      }\n    }\n\n    str += resolvedSpace ? '\\n' + indent + ']' : ']'\n    return str\n  }\n\n  /**\n   * Stringify an object\n   */\n  function stringifyObject(object: GenericObject<unknown>, indent: string): string {\n    if (typeof object.toJSON === 'function') {\n      return stringify(object.toJSON(), replacer, space, undefined)\n    }\n\n    const keys: string[] = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object)\n    const childIndent = resolvedSpace ? indent + resolvedSpace : undefined\n    let first = true\n    let str = resolvedSpace ? '{\\n' : '{'\n\n    keys.forEach((key) => {\n      const value =\n        typeof replacer === 'function' ? replacer.call(object, key, object[key]) : object[key]\n\n      if (includeProperty(key, value)) {\n        if (first) {\n          first = false\n        } else {\n          str += resolvedSpace ? ',\\n' : ','\n        }\n\n        const keyStr = JSON.stringify(key)\n        str += resolvedSpace ? childIndent + keyStr + ': ' : keyStr + ':'\n\n        str += stringifyValue(value, childIndent)\n      }\n    })\n\n    str += resolvedSpace ? '\\n' + indent + '}' : '}'\n    return str\n  }\n\n  /**\n   * Test whether to include a property in a stringified object or not.\n   */\n  function includeProperty(key: string, value: unknown): boolean {\n    return typeof value !== 'undefined' && typeof value !== 'function' && typeof value !== 'symbol'\n  }\n}\n\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */\nfunction resolveSpace(space: number | string | undefined): string | undefined {\n  if (typeof space === 'number') {\n    return ' '.repeat(space)\n  }\n\n  if (typeof space === 'string' && space !== '') {\n    return space\n  }\n\n  return undefined\n}\n"],"mappings":";;AACA,SAASA,QAAT,QAAyB,YAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CACLC,KADK,EAELC,QAFK,EAGLC,KAHK,EAILC,kBAJK,EAKe;EACpB,IAAMC,aAAa,GAAGC,YAAY,CAACH,KAAD,CAAlC;EAEA,IAAMI,aAAa,GACjB,OAAOL,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACM,IAAT,CAAc;IAAE,IAAIP;EAAN,CAAd,EAA6B,EAA7B,EAAiCA,KAAjC,CAAjC,GAA2EA,KAD7E;EAGA,OAAOQ,cAAc,CAACF,aAAD,EAAgB,EAAhB,CAArB;EAEA;AACF;AACA;;EACE,SAASE,cAAT,CAAwBR,KAAxB,EAAwCS,MAAxC,EAA4E;IAC1E,IAAIC,KAAK,CAACC,OAAN,CAAcR,kBAAd,CAAJ,EAAuC;MACrC,IAAMS,WAAW,GAAGT,kBAAkB,CAACU,IAAnB,CAAwB,UAACC,IAAD;QAAA,OAAUA,IAAI,CAACC,IAAL,CAAUf,KAAV,CAAV;MAAA,CAAxB,CAApB;;MACA,IAAIY,WAAJ,EAAiB;QACf,IAAMI,GAAG,GAAGJ,WAAW,CAACb,SAAZ,CAAsBC,KAAtB,CAAZ;;QACA,IAAI,OAAOgB,GAAP,KAAe,QAAf,IAA2B,CAAClB,QAAQ,CAACkB,GAAD,CAAxC,EAA+C;UAC7C,MAAM,IAAIC,KAAJ,CACJ,0BACE,2EADF,sBAEcD,GAFd,MADI,CAAN;QAKD;;QACD,OAAOA,GAAP;MACD;IACF,CAdyE,CAgB1E;;;IACA,IACE,OAAOhB,KAAP,KAAiB,SAAjB,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA,OAAOA,KAAP,KAAiB,QAFjB,IAGAA,KAAK,KAAK,IAHV,IAIAA,KAAK,YAAYkB,IAJjB,IAKAlB,KAAK,YAAYmB,OALjB,IAMAnB,KAAK,YAAYoB,MANjB,IAOApB,KAAK,YAAYqB,MARnB,EASE;MACA,OAAOC,IAAI,CAACvB,SAAL,CAAeC,KAAf,CAAP;IACD,CA5ByE,CA8B1E;IACA;IACA;;;IACA,IAAIA,KAAK,IAAIA,KAAK,CAACuB,gBAAnB,EAAqC;MACnC,OAAOvB,KAAK,CAACwB,QAAN,EAAP;IACD,CAnCyE,CAqC1E;;;IACA,IAAI,OAAOxB,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOA,KAAK,CAACwB,QAAN,EAAP;IACD,CAxCyE,CA0C1E;;;IACA,IAAId,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAJ,EAA0B;MACxB,OAAOyB,cAAc,CAACzB,KAAD,EAAQS,MAAR,CAArB;IACD,CA7CyE,CA+C1E;;;IACA,IAAIT,KAAK,IAAI,QAAOA,KAAP,MAAiB,QAA9B,EAAwC;MACtC,OAAO0B,eAAe,CAAC1B,KAAD,EAAkCS,MAAlC,CAAtB;IACD;;IAED,OAAOkB,SAAP;EACD;EAED;AACF;AACA;;;EACE,SAASF,cAAT,CAAwBG,KAAxB,EAA+CnB,MAA/C,EAAuE;IACrE,IAAMoB,WAAW,GAAGzB,aAAa,GAAGK,MAAM,GAAGL,aAAZ,GAA4BuB,SAA7D;IACA,IAAIX,GAAG,GAAGZ,aAAa,GAAG,KAAH,GAAW,GAAlC;;IAEA,KAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAMhB,IAAI,GACR,OAAOb,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACM,IAAT,CAAcqB,KAAd,EAAqBP,MAAM,CAACS,CAAD,CAA3B,EAAgCF,KAAK,CAACE,CAAD,CAArC,CAAjC,GAA6EF,KAAK,CAACE,CAAD,CADpF;;MAGA,IAAI1B,aAAJ,EAAmB;QACjBY,GAAG,IAAIa,WAAP;MACD;;MAED,IAAI,OAAOf,IAAP,KAAgB,WAAhB,IAA+B,OAAOA,IAAP,KAAgB,UAAnD,EAA+D;QAC7DE,GAAG,IAAIR,cAAc,CAACM,IAAD,EAAOe,WAAP,CAArB;MACD,CAFD,MAEO;QACLb,GAAG,IAAI,MAAP;MACD;;MAED,IAAIc,CAAC,GAAGF,KAAK,CAACG,MAAN,GAAe,CAAvB,EAA0B;QACxBf,GAAG,IAAIZ,aAAa,GAAG,KAAH,GAAW,GAA/B;MACD;IACF;;IAEDY,GAAG,IAAIZ,aAAa,GAAG,OAAOK,MAAP,GAAgB,GAAnB,GAAyB,GAA7C;IACA,OAAOO,GAAP;EACD;EAED;AACF;AACA;;;EACE,SAASU,eAAT,CAAyBM,MAAzB,EAAyDvB,MAAzD,EAAiF;IAC/E,IAAI,OAAOuB,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;MACvC,OAAOlC,SAAS,CAACiC,MAAM,CAACC,MAAP,EAAD,EAAkBhC,QAAlB,EAA4BC,KAA5B,EAAmCyB,SAAnC,CAAhB;IACD;;IAED,IAAMO,IAAc,GAAGxB,KAAK,CAACC,OAAN,CAAcV,QAAd,IAA0BA,QAAQ,CAACkC,GAAT,CAAad,MAAb,CAA1B,GAAiDe,MAAM,CAACF,IAAP,CAAYF,MAAZ,CAAxE;IACA,IAAMH,WAAW,GAAGzB,aAAa,GAAGK,MAAM,GAAGL,aAAZ,GAA4BuB,SAA7D;IACA,IAAIU,KAAK,GAAG,IAAZ;IACA,IAAIrB,GAAG,GAAGZ,aAAa,GAAG,KAAH,GAAW,GAAlC;IAEA8B,IAAI,CAACI,OAAL,CAAa,UAACC,GAAD,EAAS;MACpB,IAAMvC,KAAK,GACT,OAAOC,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACM,IAAT,CAAcyB,MAAd,EAAsBO,GAAtB,EAA2BP,MAAM,CAACO,GAAD,CAAjC,CAAjC,GAA2EP,MAAM,CAACO,GAAD,CADnF;;MAGA,IAAIC,eAAe,CAACD,GAAD,EAAMvC,KAAN,CAAnB,EAAiC;QAC/B,IAAIqC,KAAJ,EAAW;UACTA,KAAK,GAAG,KAAR;QACD,CAFD,MAEO;UACLrB,GAAG,IAAIZ,aAAa,GAAG,KAAH,GAAW,GAA/B;QACD;;QAED,IAAMqC,MAAM,GAAGnB,IAAI,CAACvB,SAAL,CAAewC,GAAf,CAAf;QACAvB,GAAG,IAAIZ,aAAa,GAAGyB,WAAW,GAAGY,MAAd,GAAuB,IAA1B,GAAiCA,MAAM,GAAG,GAA9D;QAEAzB,GAAG,IAAIR,cAAc,CAACR,KAAD,EAAQ6B,WAAR,CAArB;MACD;IACF,CAhBD;IAkBAb,GAAG,IAAIZ,aAAa,GAAG,OAAOK,MAAP,GAAgB,GAAnB,GAAyB,GAA7C;IACA,OAAOO,GAAP;EACD;EAED;AACF;AACA;;;EACE,SAASwB,eAAT,CAAyBD,GAAzB,EAAsCvC,KAAtC,EAA+D;IAC7D,OAAO,OAAOA,KAAP,KAAiB,WAAjB,IAAgC,OAAOA,KAAP,KAAiB,UAAjD,IAA+D,QAAOA,KAAP,MAAiB,QAAvF;EACD;AACF;AAED;AACA;AACA;AACA;;AACA,SAASK,YAAT,CAAsBH,KAAtB,EAA8E;EAC5E,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAO,IAAIwC,MAAJ,CAAWxC,KAAX,CAAP;EACD;;EAED,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,EAA3C,EAA+C;IAC7C,OAAOA,KAAP;EACD;;EAED,OAAOyB,SAAP;AACD"}