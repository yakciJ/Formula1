{"version":3,"file":"index.js","names":["config","parse","stringify","LosslessNumber","isLosslessNumber","toLosslessNumber","reviveDate","parseLosslessNumber","parseNumberAndBigInt","UnsafeNumberReason","isInteger","isNumber","isSafeNumber","toSafeNumberOrThrow","getUnsafeNumberReason"],"sources":["../../src/index.ts"],"sourcesContent":["export { config } from './config.js'\nexport { parse } from './parse.js'\nexport { stringify } from './stringify.js'\nexport { LosslessNumber, isLosslessNumber, toLosslessNumber } from './LosslessNumber.js'\nexport { reviveDate } from './reviveDate.js'\nexport { parseLosslessNumber, parseNumberAndBigInt } from './numberParsers.js'\nexport {\n  UnsafeNumberReason,\n  isInteger,\n  isNumber,\n  isSafeNumber,\n  toSafeNumberOrThrow,\n  getUnsafeNumberReason\n} from './utils.js'\nexport * from './types.js'\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,gBAA3C,QAAmE,qBAAnE;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,oBAA1D;AACA,SACEC,kBADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,mBALF,EAMEC,qBANF,QAOO,YAPP;AAQA,cAAc,YAAd"}