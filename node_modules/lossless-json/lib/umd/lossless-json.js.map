{"version":3,"file":"lossless-json.js","sources":["../esm/config.js","../esm/utils.js","../esm/LosslessNumber.js","../esm/numberParsers.js","../esm/revive.js","../esm/parse.js","../esm/stringify.js","../esm/reviveDate.js"],"sourcesContent":["/**\n * Get and/or set configuration options\n * @deprecated There is no config anymore\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function config(options) {\n  // Backward compatibility warning for v1.x\n  throw new Error('config is deprecated, support for circularRefs is removed from the library. ' + 'If you encounter circular references in your data structures, ' + 'please rethink your datastructures: ' + 'better prevent circular references in the first place.');\n}\n//# sourceMappingURL=config.js.map","/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value) {\n  return INTEGER_REGEX.test(value);\n}\nvar INTEGER_REGEX = /^-?[0-9]+$/;\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\n\nexport function isNumber(value) {\n  return NUMBER_REGEX.test(value);\n}\nvar NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n/**\n * Test whether a string can be safely represented with a number\n * without information.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\n\nexport function isSafeNumber(value, config) {\n  var num = parseFloat(value);\n  var str = String(num);\n  var v = extractSignificantDigits(value);\n  var s = extractSignificantDigits(str);\n\n  if (v === s) {\n    return true;\n  }\n\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    var requiredDigits = 14;\n\n    if (!isInteger(value) && s.length >= requiredDigits && v.startsWith(s.substring(0, requiredDigits))) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport var UnsafeNumberReason;\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\n\n(function (UnsafeNumberReason) {\n  UnsafeNumberReason[\"underflow\"] = \"underflow\";\n  UnsafeNumberReason[\"overflow\"] = \"overflow\";\n  UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n  UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n})(UnsafeNumberReason || (UnsafeNumberReason = {}));\n\nexport function getUnsafeNumberReason(value) {\n  if (isSafeNumber(value, {\n    approx: false\n  })) {\n    return undefined;\n  }\n\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer;\n  }\n\n  var num = parseFloat(value);\n\n  if (!isFinite(num)) {\n    return UnsafeNumberReason.overflow;\n  }\n\n  if (num === 0) {\n    return UnsafeNumberReason.underflow;\n  }\n\n  return UnsafeNumberReason.truncate_float;\n}\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\n\nexport function toSafeNumberOrThrow(value, config) {\n  var number = parseFloat(value);\n  var unsafeReason = getUnsafeNumberReason(value);\n\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n    var unsafeReasonText = unsafeReason.replace(/_\\w+$/, '');\n    throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(value, \"' would \").concat(unsafeReasonText, \" and become \").concat(number));\n  }\n\n  return number;\n}\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\n\nexport function extractSignificantDigits(value) {\n  return value // from \"-0.250e+30\" to \"-0.250\"\n  .replace(EXPONENTIAL_PART_REGEX, '') // from \"-0.250\" to \"-0250\"\n  .replace(DOT_REGEX, '') // from \"-0250\" to \"-025\"\n  .replace(TRAILING_ZEROS_REGEX, '') // from \"-025\" to \"25\"\n  .replace(LEADING_MINUS_AND_ZEROS_REGEX, '');\n}\nvar EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/;\nvar LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;\nvar DOT_REGEX = /\\./;\nvar TRAILING_ZEROS_REGEX = /0+$/;\n//# sourceMappingURL=utils.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extractSignificantDigits, getUnsafeNumberReason, isInteger, isNumber, UnsafeNumberReason } from './utils.js';\n/**\n * A lossless number. Stores its numeric value as string\n */\n\nexport var LosslessNumber = /*#__PURE__*/function () {\n  // numeric value as string\n  // type information\n  function LosslessNumber(value) {\n    _classCallCheck(this, LosslessNumber);\n\n    _defineProperty(this, \"isLosslessNumber\", true);\n\n    if (!isNumber(value)) {\n      throw new Error('Invalid number (value: \"' + value + '\")');\n    }\n\n    this.value = value;\n  }\n  /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */\n\n\n  _createClass(LosslessNumber, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      var unsafeReason = getUnsafeNumberReason(this.value); // safe or truncate_float\n\n      if (unsafeReason === undefined || unsafeReason === UnsafeNumberReason.truncate_float) {\n        return parseFloat(this.value);\n      } // truncate_integer\n\n\n      if (isInteger(this.value)) {\n        return BigInt(this.value);\n      } // overflow or underflow\n\n\n      throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(this.value, \"' would \").concat(unsafeReason, \" and become \").concat(parseFloat(this.value)));\n    }\n    /**\n     * Get the value of the LosslessNumber as string.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value;\n    } // Note: we do NOT implement a .toJSON() method, and you should not implement\n    // or use that, it cannot safely turn the numeric value in the string into\n    // stringified JSON since it has to be parsed into a number first.\n\n  }]);\n\n  return LosslessNumber;\n}();\n/**\n * Test whether a value is a LosslessNumber\n */\n\nexport function isLosslessNumber(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && _typeof(value) === 'object' && value.isLosslessNumber === true || false;\n}\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */\n\nexport function toLosslessNumber(value) {\n  if (extractSignificantDigits(value + '').length > 15) {\n    throw new Error('Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself ' + \"(value: \".concat(value, \")\"));\n  }\n\n  if (isNaN(value)) {\n    throw new Error('Invalid number: NaN');\n  }\n\n  if (!isFinite(value)) {\n    throw new Error('Invalid number: ' + value);\n  }\n\n  return new LosslessNumber(String(value));\n}\n//# sourceMappingURL=LosslessNumber.js.map","import { LosslessNumber } from './LosslessNumber.js';\nimport { isInteger } from './utils.js';\nexport function parseLosslessNumber(value) {\n  return new LosslessNumber(value);\n}\nexport function parseNumberAndBigInt(value) {\n  return isInteger(value) ? BigInt(value) : parseFloat(value);\n}\n//# sourceMappingURL=numberParsers.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport { isLosslessNumber } from './LosslessNumber.js';\n\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */\nexport function revive(json, reviver) {\n  return reviveValue({\n    '': json\n  }, '', json, reviver);\n}\n/**\n * Revive a value\n */\n\nfunction reviveValue(context, key, value, reviver) {\n  if (Array.isArray(value)) {\n    return reviver.call(context, key, reviveArray(value, reviver));\n  } else if (value && _typeof(value) === 'object' && !isLosslessNumber(value)) {\n    // note the special case for LosslessNumber,\n    // we don't want to iterate over the internals of a LosslessNumber\n    return reviver.call(context, key, reviveObject(value, reviver));\n  } else {\n    return reviver.call(context, key, value);\n  }\n}\n/**\n * Revive the properties of an object\n */\n\n\nfunction reviveObject(object, reviver) {\n  Object.keys(object).forEach(function (key) {\n    var value = reviveValue(object, key, object[key], reviver);\n\n    if (value !== undefined) {\n      object[key] = value;\n    } else {\n      delete object[key];\n    }\n  });\n  return object;\n}\n/**\n * Revive the properties of an Array\n */\n\n\nfunction reviveArray(array, reviver) {\n  for (var i = 0; i < array.length; i++) {\n    array[i] = reviveValue(array, i + '', array[i], reviver);\n  }\n\n  return array;\n}\n//# sourceMappingURL=revive.js.map","import { parseLosslessNumber } from './numberParsers.js';\nimport { revive } from './revive.js';\n\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */\nexport function parse(text, reviver) {\n  var parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parseLosslessNumber;\n  var i = 0;\n  var value = parseValue();\n  expectValue(value);\n  expectEndOfInput();\n  return reviver ? revive(value, reviver) : value;\n\n  function parseObject() {\n    if (text[i] === '{') {\n      i++;\n      skipWhitespace();\n      var object = {};\n      var initial = true;\n\n      while (i < text.length && text[i] !== '}') {\n        if (!initial) {\n          eatComma();\n          skipWhitespace();\n        } else {\n          initial = false;\n        }\n\n        var key = parseString();\n\n        if (key === undefined) {\n          throwObjectKeyExpected();\n        }\n\n        if (typeof object[key] !== 'undefined') {\n          // Note that we could also test `if(key in object) {...}`\n          // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n          throwDuplicateKey(key);\n        }\n\n        skipWhitespace();\n        eatColon();\n        object[key] = parseValue();\n      }\n\n      if (text[i] !== '}') {\n        throwObjectKeyOrEndExpected();\n      }\n\n      i++;\n      return object;\n    }\n  }\n\n  function parseArray() {\n    if (text[i] === '[') {\n      i++;\n      skipWhitespace();\n      var array = [];\n      var initial = true;\n\n      while (i < text.length && text[i] !== ']') {\n        if (!initial) {\n          eatComma();\n        } else {\n          initial = false;\n        }\n\n        var _value = parseValue();\n\n        expectArrayItem(_value);\n        array.push(_value);\n      }\n\n      if (text[i] !== ']') {\n        throwArrayItemOrEndExpected();\n      }\n\n      i++;\n      return array;\n    }\n  }\n\n  function parseValue() {\n    var _ref, _ref2, _ref3, _ref4, _ref5, _parseString;\n\n    skipWhitespace();\n    var value = (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_parseString = parseString()) !== null && _parseString !== void 0 ? _parseString : parseNumeric()) !== null && _ref5 !== void 0 ? _ref5 : parseObject()) !== null && _ref4 !== void 0 ? _ref4 : parseArray()) !== null && _ref3 !== void 0 ? _ref3 : parseKeyword('true', true)) !== null && _ref2 !== void 0 ? _ref2 : parseKeyword('false', false)) !== null && _ref !== void 0 ? _ref : parseKeyword('null', null);\n    skipWhitespace();\n    return value;\n  }\n\n  function parseKeyword(name, value) {\n    if (text.slice(i, i + name.length) === name) {\n      i += name.length;\n      return value;\n    }\n  }\n\n  function skipWhitespace() {\n    while (isWhitespace(text[i])) {\n      i++;\n    }\n  }\n\n  function parseString() {\n    if (text[i] === '\"') {\n      i++;\n      var result = '';\n\n      while (i < text.length && text[i] !== '\"') {\n        if (text[i] === '\\\\') {\n          var char = text[i + 1];\n          var escapeChar = escapeCharacters[char];\n\n          if (escapeChar !== undefined) {\n            result += escapeChar;\n            i++;\n          } else if (char === 'u') {\n            if (isHex(text[i + 2]) && isHex(text[i + 3]) && isHex(text[i + 4]) && isHex(text[i + 5])) {\n              result += String.fromCharCode(parseInt(text.slice(i + 2, i + 6), 16));\n              i += 5;\n            } else {\n              throwInvalidUnicodeCharacter(i);\n            }\n          } else {\n            throwInvalidEscapeCharacter(i);\n          }\n        } else {\n          result += text[i];\n        }\n\n        i++;\n      }\n\n      expectEndOfString();\n      i++;\n      return result;\n    }\n  }\n\n  function parseNumeric() {\n    var start = i;\n\n    if (text[i] === '-') {\n      i++;\n      expectDigit(start);\n    }\n\n    if (text[i] === '0') {\n      i++;\n    } else if (isNonZeroDigit(text[i])) {\n      i++;\n\n      while (isDigit(text[i])) {\n        i++;\n      }\n    }\n\n    if (text[i] === '.') {\n      i++;\n      expectDigit(start);\n\n      while (isDigit(text[i])) {\n        i++;\n      }\n    }\n\n    if (text[i] === 'e' || text[i] === 'E') {\n      i++;\n\n      if (text[i] === '-' || text[i] === '+') {\n        i++;\n      }\n\n      expectDigit(start);\n\n      while (isDigit(text[i])) {\n        i++;\n      }\n    }\n\n    if (i > start) {\n      return parseNumber(text.slice(start, i));\n    }\n  }\n\n  function eatComma() {\n    if (text[i] !== ',') {\n      throw new SyntaxError(\"Comma ',' expected after value \".concat(gotAt()));\n    }\n\n    i++;\n  }\n\n  function eatColon() {\n    if (text[i] !== ':') {\n      throw new SyntaxError(\"Colon ':' expected after property name \".concat(gotAt()));\n    }\n\n    i++;\n  }\n\n  function expectValue(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"JSON value expected \".concat(gotAt()));\n    }\n  }\n\n  function expectArrayItem(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"Array item expected \".concat(gotAt()));\n    }\n  }\n\n  function expectEndOfInput() {\n    if (i < text.length) {\n      throw new SyntaxError(\"Expected end of input \".concat(gotAt()));\n    }\n  }\n\n  function expectDigit(start) {\n    if (!isDigit(text[i])) {\n      var numSoFar = text.slice(start, i);\n      throw new SyntaxError(\"Invalid number '\".concat(numSoFar, \"', expecting a digit \").concat(gotAt()));\n    }\n  }\n\n  function expectEndOfString() {\n    if (text[i] !== '\"') {\n      throw new SyntaxError(\"End of string '\\\"' expected \".concat(gotAt()));\n    }\n  }\n\n  function throwObjectKeyExpected() {\n    throw new SyntaxError(\"Quoted object key expected \".concat(gotAt()));\n  }\n\n  function throwDuplicateKey(key) {\n    throw new SyntaxError(\"Duplicate key '\".concat(key, \"' encountered at position \").concat(i - key.length - 1));\n  }\n\n  function throwObjectKeyOrEndExpected() {\n    throw new SyntaxError(\"Quoted object key or end of object '}' expected \".concat(gotAt()));\n  }\n\n  function throwArrayItemOrEndExpected() {\n    throw new SyntaxError(\"Array item or end of array ']' expected \".concat(gotAt()));\n  }\n\n  function throwInvalidEscapeCharacter(start) {\n    var chars = text.slice(start, start + 2);\n    throw new SyntaxError(\"Invalid escape character '\".concat(chars, \"' \").concat(pos()));\n  }\n\n  function throwInvalidUnicodeCharacter(start) {\n    var end = start + 2;\n\n    while (/\\w/.test(text[end])) {\n      end++;\n    }\n\n    var chars = text.slice(start, end);\n    throw new SyntaxError(\"Invalid unicode character '\".concat(chars, \"' \").concat(pos()));\n  } // zero based character position\n\n\n  function pos() {\n    return \"at position \".concat(i);\n  }\n\n  function got() {\n    return text[i] ? \"but got '\".concat(text[i], \"'\") : 'but reached end of input';\n  }\n\n  function gotAt() {\n    return got() + ' ' + pos();\n  }\n}\n\nfunction isWhitespace(char) {\n  return whitespaceCharacters[char] === true;\n}\n\nfunction isHex(char) {\n  return /^[0-9a-fA-F]/.test(char);\n}\n\nfunction isDigit(char) {\n  return /[0-9]/.test(char);\n}\n\nfunction isNonZeroDigit(char) {\n  return /[1-9]/.test(char);\n} // map with all escape characters\n\n\nvar escapeCharacters = {\n  '\"': '\"',\n  '\\\\': '\\\\',\n  '/': '/',\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t' // note that \\u is handled separately in parseString()\n\n}; // map with all whitespace characters\n\nvar whitespaceCharacters = {\n  ' ': true,\n  '\\n': true,\n  '\\t': true,\n  '\\r': true\n};\n//# sourceMappingURL=parse.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport { isNumber } from './utils.js';\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */\n\nexport function stringify(value, replacer, space, numberStringifiers) {\n  var resolvedSpace = resolveSpace(space);\n  var replacedValue = typeof replacer === 'function' ? replacer.call({\n    '': value\n  }, '', value) : value;\n  return stringifyValue(replacedValue, '');\n  /**\n   * Stringify a value\n   */\n\n  function stringifyValue(value, indent) {\n    if (Array.isArray(numberStringifiers)) {\n      var stringifier = numberStringifiers.find(function (item) {\n        return item.test(value);\n      });\n\n      if (stringifier) {\n        var str = stringifier.stringify(value);\n\n        if (typeof str !== 'string' || !isNumber(str)) {\n          throw new Error('Invalid JSON number: ' + 'output of a number stringifier must be a string containing a JSON number ' + \"(output: \".concat(str, \")\"));\n        }\n\n        return str;\n      }\n    } // boolean, null, number, string, or date\n\n\n    if (typeof value === 'boolean' || typeof value === 'number' || typeof value === 'string' || value === null || value instanceof Date || value instanceof Boolean || value instanceof Number || value instanceof String) {\n      return JSON.stringify(value);\n    } // lossless number, the secret ingredient :)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n\n    if (value && value.isLosslessNumber) {\n      return value.toString();\n    } // BigInt\n\n\n    if (typeof value === 'bigint') {\n      return value.toString();\n    } // Array\n\n\n    if (Array.isArray(value)) {\n      return stringifyArray(value, indent);\n    } // Object (test lastly!)\n\n\n    if (value && _typeof(value) === 'object') {\n      return stringifyObject(value, indent);\n    }\n\n    return undefined;\n  }\n  /**\n   * Stringify an array\n   */\n\n\n  function stringifyArray(array, indent) {\n    var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n    var str = resolvedSpace ? '[\\n' : '[';\n\n    for (var i = 0; i < array.length; i++) {\n      var item = typeof replacer === 'function' ? replacer.call(array, String(i), array[i]) : array[i];\n\n      if (resolvedSpace) {\n        str += childIndent;\n      }\n\n      if (typeof item !== 'undefined' && typeof item !== 'function') {\n        str += stringifyValue(item, childIndent);\n      } else {\n        str += 'null';\n      }\n\n      if (i < array.length - 1) {\n        str += resolvedSpace ? ',\\n' : ',';\n      }\n    }\n\n    str += resolvedSpace ? '\\n' + indent + ']' : ']';\n    return str;\n  }\n  /**\n   * Stringify an object\n   */\n\n\n  function stringifyObject(object, indent) {\n    if (typeof object.toJSON === 'function') {\n      return stringify(object.toJSON(), replacer, space, undefined);\n    }\n\n    var keys = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object);\n    var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n    var first = true;\n    var str = resolvedSpace ? '{\\n' : '{';\n    keys.forEach(function (key) {\n      var value = typeof replacer === 'function' ? replacer.call(object, key, object[key]) : object[key];\n\n      if (includeProperty(key, value)) {\n        if (first) {\n          first = false;\n        } else {\n          str += resolvedSpace ? ',\\n' : ',';\n        }\n\n        var keyStr = JSON.stringify(key);\n        str += resolvedSpace ? childIndent + keyStr + ': ' : keyStr + ':';\n        str += stringifyValue(value, childIndent);\n      }\n    });\n    str += resolvedSpace ? '\\n' + indent + '}' : '}';\n    return str;\n  }\n  /**\n   * Test whether to include a property in a stringified object or not.\n   */\n\n\n  function includeProperty(key, value) {\n    return typeof value !== 'undefined' && typeof value !== 'function' && _typeof(value) !== 'symbol';\n  }\n}\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */\n\nfunction resolveSpace(space) {\n  if (typeof space === 'number') {\n    return ' '.repeat(space);\n  }\n\n  if (typeof space === 'string' && space !== '') {\n    return space;\n  }\n\n  return undefined;\n}\n//# sourceMappingURL=stringify.js.map","/**\n * Revive a string containing an ISO 8601 date string into a JavaScript `Date` object\n */\nexport function reviveDate(key, value) {\n  return typeof value === 'string' && isoDateRegex.test(value) ? new Date(value) : value;\n} // Matches strings like \"2022-08-25T09:39:19.288Z\"\n\nvar isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n//# sourceMappingURL=reviveDate.js.map"],"names":["g","f","exports","module","define","amd","globalThis","self","LosslessJSON","this","isInteger","value","INTEGER_REGEX","test","isNumber","NUMBER_REGEX","UnsafeNumberReason","isSafeNumber","config","num","parseFloat","str","String","v","extractSignificantDigits","s","approx","length","startsWith","substring","getUnsafeNumberReason","truncate_integer","isFinite","underflow","truncate_float","overflow","replace","EXPONENTIAL_PART_REGEX","DOT_REGEX","TRAILING_ZEROS_REGEX","LEADING_MINUS_AND_ZEROS_REGEX","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","LosslessNumber","instance","Constructor","TypeError","_classCallCheck","_defineProperty","Error","protoProps","staticProps","unsafeReason","undefined","BigInt","concat","isLosslessNumber","parseLosslessNumber","revive","json","reviver","reviveValue","context","Array","isArray","call","array","reviveArray","object","keys","forEach","reviveObject","isWhitespace","char","whitespaceCharacters","isHex","isDigit","isNonZeroDigit","escapeCharacters","b","n","r","t","isoDateRegex","options","parse","text","parseNumber","arguments","parseValue","expectValue","expectEndOfInput","parseObject","skipWhitespace","initial","eatComma","parseString","throwObjectKeyExpected","throwDuplicateKey","eatColon","throwObjectKeyOrEndExpected","parseArray","_value","expectArrayItem","push","throwArrayItemOrEndExpected","_ref","_ref2","_ref3","_ref4","_ref5","_parseString","parseNumeric","parseKeyword","name","slice","result","escapeChar","fromCharCode","parseInt","throwInvalidUnicodeCharacter","throwInvalidEscapeCharacter","expectEndOfString","start","expectDigit","SyntaxError","gotAt","numSoFar","chars","pos","end","got","parseNumberAndBigInt","reviveDate","Date","stringify","replacer","space","numberStringifiers","resolvedSpace","repeat","resolveSpace","stringifyValue","indent","stringifier","find","item","Boolean","Number","JSON","toString","childIndent","stringifyArray","toJSON","map","first","includeProperty","keyStr","stringifyObject","toLosslessNumber","isNaN","toSafeNumberOrThrow","number","unsafeReasonText"],"mappings":"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"}